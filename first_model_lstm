{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8076,"databundleVersionId":44219,"sourceType":"competition"},{"sourceId":229927,"sourceType":"modelInstanceVersion","isSourceIdPinned":true,"modelInstanceId":196065,"modelId":217963}],"dockerImageVersionId":30823,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:13.054220Z","iopub.execute_input":"2025-01-14T16:44:13.054678Z","iopub.status.idle":"2025-01-14T16:44:13.403075Z","shell.execute_reply.started":"2025-01-14T16:44:13.054540Z","shell.execute_reply":"2025-01-14T16:44:13.402168Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/jigsaw-toxic-comment-classification-challenge/train.csv.zip\n/kaggle/input/jigsaw-toxic-comment-classification-challenge/sample_submission.csv.zip\n/kaggle/input/jigsaw-toxic-comment-classification-challenge/test_labels.csv.zip\n/kaggle/input/jigsaw-toxic-comment-classification-challenge/test.csv.zip\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/jigsaw-toxic-comment-classification-challenge/train.csv.zip')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:13.437685Z","iopub.execute_input":"2025-01-14T16:44:13.438124Z","iopub.status.idle":"2025-01-14T16:44:15.411714Z","shell.execute_reply.started":"2025-01-14T16:44:13.438098Z","shell.execute_reply":"2025-01-14T16:44:15.410692Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"import os\nimport pandas as pd\nimport numpy as np\nimport tensorflow as tf\nimport nltk\nnltk.download('punkt_tab')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:15.412984Z","iopub.execute_input":"2025-01-14T16:44:15.413312Z","iopub.status.idle":"2025-01-14T16:44:25.576356Z","shell.execute_reply.started":"2025-01-14T16:44:15.413274Z","shell.execute_reply":"2025-01-14T16:44:25.575335Z"}},"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package punkt_tab to /usr/share/nltk_data...\n[nltk_data]   Unzipping tokenizers/punkt_tab.zip.\n","output_type":"stream"},{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"True"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:25.578189Z","iopub.execute_input":"2025-01-14T16:44:25.578746Z","iopub.status.idle":"2025-01-14T16:44:25.596164Z","shell.execute_reply.started":"2025-01-14T16:44:25.578720Z","shell.execute_reply":"2025-01-14T16:44:25.594892Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"                 id                                       comment_text  toxic  \\\n0  0000997932d777bf  Explanation\\nWhy the edits made under my usern...      0   \n1  000103f0d9cfb60f  D'aww! He matches this background colour I'm s...      0   \n2  000113f07ec002fd  Hey man, I'm really not trying to edit war. It...      0   \n3  0001b41b1c6bb37e  \"\\nMore\\nI can't make any real suggestions on ...      0   \n4  0001d958c54c6e35  You, sir, are my hero. Any chance you remember...      0   \n\n   severe_toxic  obscene  threat  insult  identity_hate  \n0             0        0       0       0              0  \n1             0        0       0       0              0  \n2             0        0       0       0              0  \n3             0        0       0       0              0  \n4             0        0       0       0              0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>comment_text</th>\n      <th>toxic</th>\n      <th>severe_toxic</th>\n      <th>obscene</th>\n      <th>threat</th>\n      <th>insult</th>\n      <th>identity_hate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0000997932d777bf</td>\n      <td>Explanation\\nWhy the edits made under my usern...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>000103f0d9cfb60f</td>\n      <td>D'aww! He matches this background colour I'm s...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>000113f07ec002fd</td>\n      <td>Hey man, I'm really not trying to edit war. It...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0001b41b1c6bb37e</td>\n      <td>\"\\nMore\\nI can't make any real suggestions on ...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0001d958c54c6e35</td>\n      <td>You, sir, are my hero. Any chance you remember...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"df[df['threat']==1].head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T17:21:28.721541Z","iopub.execute_input":"2025-01-14T17:21:28.721901Z","iopub.status.idle":"2025-01-14T17:21:28.734247Z","shell.execute_reply.started":"2025-01-14T17:21:28.721874Z","shell.execute_reply":"2025-01-14T17:21:28.733366Z"}},"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"                    id                                       comment_text  \\\n79    003217c3eb469ba9  Hi! I am back again!\\nLast warning!\\nStop undo...   \n176   006b94add72ed61c  I think that your a Fagget get a oife and burn...   \n600   0199d6af27b715f3  I'm also a sock puppet of this account...SUPRI...   \n802   02230885017a50c5  Fuck you, Smith. Please have me notified when ...   \n1017  02c6e41e4b317ac3  WOULDN'T BE THE FIRST TIME BITCH. FUCK YOU I'L...   \n\n      toxic  severe_toxic  obscene  threat  insult  identity_hate  \n79        1             0        0       1       0              0  \n176       1             0        1       1       1              1  \n600       1             0        0       1       0              0  \n802       1             0        1       1       1              0  \n1017      1             1        1       1       1              1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>comment_text</th>\n      <th>toxic</th>\n      <th>severe_toxic</th>\n      <th>obscene</th>\n      <th>threat</th>\n      <th>insult</th>\n      <th>identity_hate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>79</th>\n      <td>003217c3eb469ba9</td>\n      <td>Hi! I am back again!\\nLast warning!\\nStop undo...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>176</th>\n      <td>006b94add72ed61c</td>\n      <td>I think that your a Fagget get a oife and burn...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>600</th>\n      <td>0199d6af27b715f3</td>\n      <td>I'm also a sock puppet of this account...SUPRI...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>802</th>\n      <td>02230885017a50c5</td>\n      <td>Fuck you, Smith. Please have me notified when ...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1017</th>\n      <td>02c6e41e4b317ac3</td>\n      <td>WOULDN'T BE THE FIRST TIME BITCH. FUCK YOU I'L...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":63},{"cell_type":"code","source":"X = df['comment_text']\ny = df[df.columns[2:]].values","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:25.621777Z","iopub.execute_input":"2025-01-14T16:44:25.622020Z","iopub.status.idle":"2025-01-14T16:44:25.635665Z","shell.execute_reply.started":"2025-01-14T16:44:25.622000Z","shell.execute_reply":"2025-01-14T16:44:25.634714Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"from tensorflow.keras.layers import TextVectorization","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:25.636651Z","iopub.execute_input":"2025-01-14T16:44:25.637012Z","iopub.status.idle":"2025-01-14T16:44:25.680009Z","shell.execute_reply.started":"2025-01-14T16:44:25.636979Z","shell.execute_reply":"2025-01-14T16:44:25.679233Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"max_features = 200000\nsequence_length = 3000\nvectorizer = TextVectorization(max_tokens=max_features, output_sequence_length=sequence_length)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:25.681813Z","iopub.execute_input":"2025-01-14T16:44:25.682067Z","iopub.status.idle":"2025-01-14T16:44:25.725044Z","shell.execute_reply.started":"2025-01-14T16:44:25.682045Z","shell.execute_reply":"2025-01-14T16:44:25.724161Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"vectorizer.adapt(X.values)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:25.726191Z","iopub.execute_input":"2025-01-14T16:44:25.726424Z","iopub.status.idle":"2025-01-14T16:44:30.697473Z","shell.execute_reply.started":"2025-01-14T16:44:25.726404Z","shell.execute_reply":"2025-01-14T16:44:30.696526Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"vectorized_text = vectorizer(X.values)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:30.708898Z","iopub.execute_input":"2025-01-14T16:44:30.709187Z","iopub.status.idle":"2025-01-14T16:44:37.236001Z","shell.execute_reply.started":"2025-01-14T16:44:30.709166Z","shell.execute_reply":"2025-01-14T16:44:37.235079Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"vectorized_text","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:37.238761Z","iopub.execute_input":"2025-01-14T16:44:37.239025Z","iopub.status.idle":"2025-01-14T16:44:37.244891Z","shell.execute_reply.started":"2025-01-14T16:44:37.239003Z","shell.execute_reply":"2025-01-14T16:44:37.243928Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(159571, 3000), dtype=int64, numpy=\narray([[  645,    76,     2, ...,     0,     0,     0],\n       [    1,    54,  2489, ...,     0,     0,     0],\n       [  425,   441,    70, ...,     0,     0,     0],\n       ...,\n       [32445,  7392,   383, ...,     0,     0,     0],\n       [    5,    12,   534, ...,     0,     0,     0],\n       [    5,     8,   130, ...,     0,     0,     0]])>"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"#MCSHBAP - map, chache, shuffle, batch, prefetch  from_tensor_slices, list_file\ndataset = tf.data.Dataset.from_tensor_slices((vectorized_text, y))\ndataset = dataset.cache()\ndataset = dataset.shuffle(160000)\ndataset = dataset.batch(16)\ndataset = dataset.prefetch(8) # helps bottlenecks","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:37.245933Z","iopub.execute_input":"2025-01-14T16:44:37.246227Z","iopub.status.idle":"2025-01-14T16:44:37.277475Z","shell.execute_reply.started":"2025-01-14T16:44:37.246205Z","shell.execute_reply":"2025-01-14T16:44:37.276453Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"train = dataset.take(int(len(dataset)*0.7))\nval = dataset.skip(int(len(dataset)*.7)).take(int(len(dataset)*.2))\ntest = dataset.skip(int(len(dataset)*.9)).take(int(len(dataset)*.1))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:42.388272Z","iopub.execute_input":"2025-01-14T16:44:42.388640Z","iopub.status.idle":"2025-01-14T16:44:42.403780Z","shell.execute_reply.started":"2025-01-14T16:44:42.388609Z","shell.execute_reply":"2025-01-14T16:44:42.402827Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, LSTM, Bidirectional, Dropout, Embedding","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:42.405217Z","iopub.execute_input":"2025-01-14T16:44:42.405574Z","iopub.status.idle":"2025-01-14T16:44:42.419795Z","shell.execute_reply.started":"2025-01-14T16:44:42.405518Z","shell.execute_reply":"2025-01-14T16:44:42.418885Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"model = Sequential()\nmodel.add(Embedding(max_features+1, 32))\n# +1 for padding token where the value of vector is 0 (no word present)\n# Bidirectional LSTM Layer\nmodel.add(Bidirectional(LSTM(32, activation='tanh')))\nmodel.add(Dropout(0.2))\n# Feature extractor Fully connected layers\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(256, activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.2))\n# Final layer\nmodel.add(Dense(6, activation='sigmoid'))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:46.632043Z","iopub.execute_input":"2025-01-14T16:44:46.632355Z","iopub.status.idle":"2025-01-14T16:44:46.636079Z","shell.execute_reply.started":"2025-01-14T16:44:46.632331Z","shell.execute_reply":"2025-01-14T16:44:46.635245Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"model.compile(loss='BinaryCrossentropy',optimizer='Adam')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:47.018190Z","iopub.execute_input":"2025-01-14T16:44:47.018619Z","iopub.status.idle":"2025-01-14T16:44:47.022774Z","shell.execute_reply.started":"2025-01-14T16:44:47.018591Z","shell.execute_reply":"2025-01-14T16:44:47.021404Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"model.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T18:16:47.417638Z","iopub.execute_input":"2025-01-14T18:16:47.418069Z","iopub.status.idle":"2025-01-14T18:16:47.446650Z","shell.execute_reply.started":"2025-01-14T18:16:47.418040Z","shell.execute_reply":"2025-01-14T18:16:47.445757Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n│ embedding (\u001b[38;5;33mEmbedding\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m3000\u001b[0m, \u001b[38;5;34m32\u001b[0m)            │       \u001b[38;5;34m6,400,032\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ bidirectional (\u001b[38;5;33mBidirectional\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)                  │          \u001b[38;5;34m16,640\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout (\u001b[38;5;33mDropout\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)                  │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │           \u001b[38;5;34m8,320\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)                 │          \u001b[38;5;34m33,024\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout_2 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │          \u001b[38;5;34m32,896\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout_3 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m6\u001b[0m)                   │             \u001b[38;5;34m774\u001b[0m │\n└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n│ embedding (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3000</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)            │       <span style=\"color: #00af00; text-decoration-color: #00af00\">6,400,032</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ bidirectional (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Bidirectional</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)                  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">16,640</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)                  │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │           <span style=\"color: #00af00; text-decoration-color: #00af00\">8,320</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)                 │          <span style=\"color: #00af00; text-decoration-color: #00af00\">33,024</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │          <span style=\"color: #00af00; text-decoration-color: #00af00\">32,896</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>)                   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">774</span> │\n└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m6,491,688\u001b[0m (24.76 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">6,491,688</span> (24.76 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m6,491,686\u001b[0m (24.76 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">6,491,686</span> (24.76 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Optimizer params: \u001b[0m\u001b[38;5;34m2\u001b[0m (12.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Optimizer params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">2</span> (12.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":80},{"cell_type":"code","source":"history = model.fit(train,epochs=2,validation_data = val)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:47.403328Z","iopub.execute_input":"2025-01-14T16:44:47.403683Z","iopub.status.idle":"2025-01-14T16:44:47.407682Z","shell.execute_reply.started":"2025-01-14T16:44:47.403654Z","shell.execute_reply":"2025-01-14T16:44:47.406637Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"model.save('/kaggle/working/toxic_classifier_model.h5')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:44:48.562853Z","iopub.execute_input":"2025-01-14T16:44:48.563176Z","iopub.status.idle":"2025-01-14T16:44:48.567100Z","shell.execute_reply.started":"2025-01-14T16:44:48.563151Z","shell.execute_reply":"2025-01-14T16:44:48.565894Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"model = tf.keras.models.load_model('/kaggle/input/my_model/keras/default/1/toxic_classifier_model.h5')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:59:03.687932Z","iopub.execute_input":"2025-01-14T16:59:03.688296Z","iopub.status.idle":"2025-01-14T16:59:04.282355Z","shell.execute_reply.started":"2025-01-14T16:59:03.688268Z","shell.execute_reply":"2025-01-14T16:59:04.281337Z"}},"outputs":[],"execution_count":23},{"cell_type":"code","source":"from tensorflow.keras.metrics import Precision, Recall, CategoricalAccuracy ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T16:59:08.076828Z","iopub.execute_input":"2025-01-14T16:59:08.077137Z","iopub.status.idle":"2025-01-14T16:59:08.082464Z","shell.execute_reply.started":"2025-01-14T16:59:08.077111Z","shell.execute_reply":"2025-01-14T16:59:08.081618Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"pre = Precision()\nre = Recall()\nacc = CategoricalAccuracy()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T17:28:00.917739Z","iopub.execute_input":"2025-01-14T17:28:00.918087Z","iopub.status.idle":"2025-01-14T17:28:00.936902Z","shell.execute_reply.started":"2025-01-14T17:28:00.918062Z","shell.execute_reply":"2025-01-14T17:28:00.935854Z"}},"outputs":[],"execution_count":72},{"cell_type":"code","source":"for batch in test.as_numpy_iterator():\n    \n    X_true, y_true = batch\n    y_hat = model.predict(X_true, verbose=0)\n    \n    y_true = y_true.flatten()\n    y_hat = y_hat.flatten()\n    \n    pre.update_state(y_true,y_hat)\n    re.update_state(y_true,y_hat)\n    acc.update_state(y_true,y_hat)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T17:28:01.325737Z","iopub.execute_input":"2025-01-14T17:28:01.326070Z","iopub.status.idle":"2025-01-14T17:33:12.826437Z","shell.execute_reply.started":"2025-01-14T17:28:01.326044Z","shell.execute_reply":"2025-01-14T17:33:12.825289Z"},"_kg_hide-input":true},"outputs":[],"execution_count":73},{"cell_type":"code","source":"print(f\"precision: {pre.result().numpy()}, recall: {re.result().numpy()}, accuracy: {acc.result().numpy()}\") ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T17:33:12.827976Z","iopub.execute_input":"2025-01-14T17:33:12.828281Z","iopub.status.idle":"2025-01-14T17:33:12.836902Z","shell.execute_reply.started":"2025-01-14T17:33:12.828255Z","shell.execute_reply":"2025-01-14T17:33:12.835867Z"}},"outputs":[{"name":"stdout","text":"precision: 0.860832154750824, recall: 0.6783493757247925, accuracy: 0.4814443290233612\n","output_type":"stream"}],"execution_count":74},{"cell_type":"code","source":"ex = vectorizer(\"I will kill you bitch\")\nex","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T17:21:49.638732Z","iopub.execute_input":"2025-01-14T17:21:49.639115Z","iopub.status.idle":"2025-01-14T17:21:49.657301Z","shell.execute_reply.started":"2025-01-14T17:21:49.639087Z","shell.execute_reply":"2025-01-14T17:21:49.656032Z"}},"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(3000,), dtype=int64, numpy=array([  8,  44, 950, ...,   0,   0,   0])>"},"metadata":{}}],"execution_count":64},{"cell_type":"code","source":"df.columns[2:]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T17:21:54.396973Z","iopub.execute_input":"2025-01-14T17:21:54.397300Z","iopub.status.idle":"2025-01-14T17:21:54.403657Z","shell.execute_reply.started":"2025-01-14T17:21:54.397276Z","shell.execute_reply":"2025-01-14T17:21:54.402791Z"}},"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"Index(['toxic', 'severe_toxic', 'obscene', 'threat', 'insult',\n       'identity_hate'],\n      dtype='object')"},"metadata":{}}],"execution_count":65},{"cell_type":"code","source":"res = model.predict(np.expand_dims(ex,0))\nres>0.5","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T17:21:55.802118Z","iopub.execute_input":"2025-01-14T17:21:55.802438Z","iopub.status.idle":"2025-01-14T17:21:55.977750Z","shell.execute_reply.started":"2025-01-14T17:21:55.802415Z","shell.execute_reply":"2025-01-14T17:21:55.976879Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 121ms/step\n","output_type":"stream"},{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"array([[ True, False,  True, False,  True, False]])"},"metadata":{}}],"execution_count":66},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"res>0.5 \nres","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T17:16:26.756733Z","iopub.execute_input":"2025-01-14T17:16:26.757138Z","iopub.status.idle":"2025-01-14T17:16:26.764764Z","shell.execute_reply.started":"2025-01-14T17:16:26.757108Z","shell.execute_reply":"2025-01-14T17:16:26.763602Z"}},"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"array([[0.9119561 , 0.08178818, 0.65896773, 0.05377713, 0.5690771 ,\n        0.1276635 ]], dtype=float32)"},"metadata":{}}],"execution_count":34},{"cell_type":"markdown","source":"Test and Gradio","metadata":{}},{"cell_type":"code","source":"!pip install gradio jinja2","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T18:00:34.617501Z","iopub.execute_input":"2025-01-14T18:00:34.619378Z","iopub.status.idle":"2025-01-14T18:00:51.414816Z","shell.execute_reply.started":"2025-01-14T18:00:34.619292Z","shell.execute_reply":"2025-01-14T18:00:51.413271Z"}},"outputs":[{"name":"stderr","text":"/usr/lib/python3.10/pty.py:89: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  pid, fd = os.forkpty()\n","output_type":"stream"},{"name":"stdout","text":"Collecting gradio\n  Downloading gradio-5.12.0-py3-none-any.whl.metadata (16 kB)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (3.1.4)\nRequirement already satisfied: aiofiles<24.0,>=22.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (22.1.0)\nRequirement already satisfied: anyio<5.0,>=3.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (3.7.1)\nCollecting fastapi<1.0,>=0.115.2 (from gradio)\n  Downloading fastapi-0.115.6-py3-none-any.whl.metadata (27 kB)\nCollecting ffmpy (from gradio)\n  Downloading ffmpy-0.5.0-py3-none-any.whl.metadata (3.0 kB)\nCollecting gradio-client==1.5.4 (from gradio)\n  Downloading gradio_client-1.5.4-py3-none-any.whl.metadata (7.1 kB)\nCollecting httpx>=0.24.1 (from gradio)\n  Downloading httpx-0.28.1-py3-none-any.whl.metadata (7.1 kB)\nCollecting huggingface-hub>=0.25.1 (from gradio)\n  Downloading huggingface_hub-0.27.1-py3-none-any.whl.metadata (13 kB)\nRequirement already satisfied: markupsafe~=2.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.1.5)\nRequirement already satisfied: numpy<3.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (1.26.4)\nCollecting orjson~=3.0 (from gradio)\n  Downloading orjson-3.10.14-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (41 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.8/41.8 kB\u001b[0m \u001b[31m2.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from gradio) (24.1)\nRequirement already satisfied: pandas<3.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.1.4)\nRequirement already satisfied: pillow<12.0,>=8.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (10.4.0)\nRequirement already satisfied: pydantic>=2.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.9.2)\nRequirement already satisfied: pydub in /usr/local/lib/python3.10/dist-packages (from gradio) (0.25.1)\nCollecting python-multipart>=0.0.18 (from gradio)\n  Downloading python_multipart-0.0.20-py3-none-any.whl.metadata (1.8 kB)\nRequirement already satisfied: pyyaml<7.0,>=5.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (6.0.2)\nCollecting ruff>=0.2.2 (from gradio)\n  Downloading ruff-0.9.1-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)\nCollecting safehttpx<0.2.0,>=0.1.6 (from gradio)\n  Downloading safehttpx-0.1.6-py3-none-any.whl.metadata (4.2 kB)\nCollecting semantic-version~=2.0 (from gradio)\n  Downloading semantic_version-2.10.0-py2.py3-none-any.whl.metadata (9.7 kB)\nCollecting starlette<1.0,>=0.40.0 (from gradio)\n  Downloading starlette-0.45.2-py3-none-any.whl.metadata (6.3 kB)\nCollecting tomlkit<0.14.0,>=0.12.0 (from gradio)\n  Downloading tomlkit-0.13.2-py3-none-any.whl.metadata (2.7 kB)\nRequirement already satisfied: typer<1.0,>=0.12 in /usr/local/lib/python3.10/dist-packages (from gradio) (0.12.5)\nRequirement already satisfied: typing-extensions~=4.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (4.12.2)\nCollecting uvicorn>=0.14.0 (from gradio)\n  Downloading uvicorn-0.34.0-py3-none-any.whl.metadata (6.5 kB)\nRequirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from gradio-client==1.5.4->gradio) (2024.6.1)\nRequirement already satisfied: websockets<15.0,>=10.0 in /usr/local/lib/python3.10/dist-packages (from gradio-client==1.5.4->gradio) (14.1)\nRequirement already satisfied: idna>=2.8 in /usr/local/lib/python3.10/dist-packages (from anyio<5.0,>=3.0->gradio) (3.10)\nRequirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio<5.0,>=3.0->gradio) (1.3.1)\nRequirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<5.0,>=3.0->gradio) (1.2.2)\nCollecting starlette<1.0,>=0.40.0 (from gradio)\n  Downloading starlette-0.41.3-py3-none-any.whl.metadata (6.0 kB)\nRequirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from httpx>=0.24.1->gradio) (2024.8.30)\nCollecting httpcore==1.* (from httpx>=0.24.1->gradio)\n  Downloading httpcore-1.0.7-py3-none-any.whl.metadata (21 kB)\nCollecting h11<0.15,>=0.13 (from httpcore==1.*->httpx>=0.24.1->gradio)\n  Downloading h11-0.14.0-py3-none-any.whl.metadata (8.2 kB)\nRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.25.1->gradio) (3.16.1)\nRequirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.25.1->gradio) (2.32.3)\nRequirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.25.1->gradio) (4.66.5)\nRequirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas<3.0,>=1.0->gradio) (2.8.2)\nRequirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3.0,>=1.0->gradio) (2024.2)\nRequirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3.0,>=1.0->gradio) (2024.1)\nRequirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2.0->gradio) (0.7.0)\nRequirement already satisfied: pydantic-core==2.23.4 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2.0->gradio) (2.23.4)\nRequirement already satisfied: click>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0,>=0.12->gradio) (8.1.7)\nRequirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0,>=0.12->gradio) (1.5.4)\nRequirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0,>=0.12->gradio) (13.8.1)\nRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas<3.0,>=1.0->gradio) (1.16.0)\nRequirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0,>=0.12->gradio) (3.0.0)\nRequirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0,>=0.12->gradio) (2.18.0)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.25.1->gradio) (3.3.2)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.25.1->gradio) (2.2.3)\nRequirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0,>=0.12->gradio) (0.1.2)\nDownloading gradio-5.12.0-py3-none-any.whl (57.6 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m57.6/57.6 MB\u001b[0m \u001b[31m17.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0mm\n\u001b[?25hDownloading gradio_client-1.5.4-py3-none-any.whl (321 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m321.4/321.4 kB\u001b[0m \u001b[31m15.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading fastapi-0.115.6-py3-none-any.whl (94 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m94.8/94.8 kB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading httpx-0.28.1-py3-none-any.whl (73 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.5/73.5 kB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading httpcore-1.0.7-py3-none-any.whl (78 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m78.6/78.6 kB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading huggingface_hub-0.27.1-py3-none-any.whl (450 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m450.7/450.7 kB\u001b[0m \u001b[31m20.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading orjson-3.10.14-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (130 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m130.4/130.4 kB\u001b[0m \u001b[31m7.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading python_multipart-0.0.20-py3-none-any.whl (24 kB)\nDownloading ruff-0.9.1-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.3 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m11.3/11.3 MB\u001b[0m \u001b[31m80.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading safehttpx-0.1.6-py3-none-any.whl (8.7 kB)\nDownloading semantic_version-2.10.0-py2.py3-none-any.whl (15 kB)\nDownloading starlette-0.41.3-py3-none-any.whl (73 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.2/73.2 kB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading tomlkit-0.13.2-py3-none-any.whl (37 kB)\nDownloading uvicorn-0.34.0-py3-none-any.whl (62 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.3/62.3 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading ffmpy-0.5.0-py3-none-any.whl (6.0 kB)\nDownloading h11-0.14.0-py3-none-any.whl (58 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m2.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hInstalling collected packages: tomlkit, semantic-version, ruff, python-multipart, orjson, h11, ffmpy, uvicorn, starlette, huggingface-hub, httpcore, httpx, fastapi, safehttpx, gradio-client, gradio\n  Attempting uninstall: huggingface-hub\n    Found existing installation: huggingface-hub 0.24.7\n    Uninstalling huggingface-hub-0.24.7:\n      Successfully uninstalled huggingface-hub-0.24.7\nSuccessfully installed fastapi-0.115.6 ffmpy-0.5.0 gradio-5.12.0 gradio-client-1.5.4 h11-0.14.0 httpcore-1.0.7 httpx-0.28.1 huggingface-hub-0.27.1 orjson-3.10.14 python-multipart-0.0.20 ruff-0.9.1 safehttpx-0.1.6 semantic-version-2.10.0 starlette-0.41.3 tomlkit-0.13.2 uvicorn-0.34.0\n","output_type":"stream"}],"execution_count":75},{"cell_type":"code","source":"import tensorflow as tf\nimport gradio as gr","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T18:03:00.437972Z","iopub.execute_input":"2025-01-14T18:03:00.438350Z","iopub.status.idle":"2025-01-14T18:03:04.162729Z","shell.execute_reply.started":"2025-01-14T18:03:00.438323Z","shell.execute_reply":"2025-01-14T18:03:04.161910Z"}},"outputs":[],"execution_count":76},{"cell_type":"code","source":"def score_comment(comment):\n    vectorized_comment = vectorizer([comment])\n    results = model.predict(vectorized_comment)\n    \n    text = ''\n    for idx, col in enumerate(df.columns[2:]):\n        text += '{}: {}\\n'.format(col, results[0][idx]>0.5)\n    \n    return text","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T18:03:13.528180Z","iopub.execute_input":"2025-01-14T18:03:13.528944Z","iopub.status.idle":"2025-01-14T18:03:13.534254Z","shell.execute_reply.started":"2025-01-14T18:03:13.528911Z","shell.execute_reply":"2025-01-14T18:03:13.533186Z"}},"outputs":[],"execution_count":77},{"cell_type":"code","source":"interface = gr.Interface(\n    fn=score_comment, \n    inputs=gr.Textbox(lines=2, placeholder='Comment to score'),  # Use gr.Textbox directly\n    outputs=gr.Text()  # Use gr.Text for text output\n)\n\n# Launch the interface\ninterface.launch()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T18:13:08.487102Z","iopub.execute_input":"2025-01-14T18:13:08.487568Z","iopub.status.idle":"2025-01-14T18:13:10.169995Z","shell.execute_reply.started":"2025-01-14T18:13:08.487494Z","shell.execute_reply":"2025-01-14T18:13:10.168936Z"}},"outputs":[{"name":"stdout","text":"* Running on local URL:  http://127.0.0.1:7860\nKaggle notebooks require sharing enabled. Setting `share=True` (you can turn this off by setting `share=False` in `launch()` explicitly).\n\n* Running on public URL: https://fccabbcb530cf218bc.gradio.live\n\nThis share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from the terminal in the working directory to deploy to Hugging Face Spaces (https://huggingface.co/spaces)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"<div><iframe src=\"https://fccabbcb530cf218bc.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"},"metadata":{}},{"execution_count":79,"output_type":"execute_result","data":{"text/plain":""},"metadata":{}},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step\n","output_type":"stream"}],"execution_count":79},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}